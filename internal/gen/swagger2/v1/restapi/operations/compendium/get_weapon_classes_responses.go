// Code generated by go-swagger; DO NOT EDIT.

package compendium

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"github.com/ssssargsian/uniplay/internal/gen/swagger2/v1/models"
)

// GetWeaponClassesOKCode is the HTTP code returned for type GetWeaponClassesOK
const GetWeaponClassesOKCode int = 200

/*
GetWeaponClassesOK OK

swagger:response getWeaponClassesOK
*/
type GetWeaponClassesOK struct {

	/*
	  In: Body
	*/
	Payload models.WeaponClassList `json:"body,omitempty"`
}

// NewGetWeaponClassesOK creates GetWeaponClassesOK with default headers values
func NewGetWeaponClassesOK() *GetWeaponClassesOK {

	return &GetWeaponClassesOK{}
}

// WithPayload adds the payload to the get weapon classes o k response
func (o *GetWeaponClassesOK) WithPayload(payload models.WeaponClassList) *GetWeaponClassesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get weapon classes o k response
func (o *GetWeaponClassesOK) SetPayload(payload models.WeaponClassList) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWeaponClassesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = models.WeaponClassList{}
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

func (o *GetWeaponClassesOK) GetWeaponClassesResponder() {}

// GetWeaponClassesInternalServerErrorCode is the HTTP code returned for type GetWeaponClassesInternalServerError
const GetWeaponClassesInternalServerErrorCode int = 500

/*
GetWeaponClassesInternalServerError Internal Server Error

swagger:response getWeaponClassesInternalServerError
*/
type GetWeaponClassesInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetWeaponClassesInternalServerError creates GetWeaponClassesInternalServerError with default headers values
func NewGetWeaponClassesInternalServerError() *GetWeaponClassesInternalServerError {

	return &GetWeaponClassesInternalServerError{}
}

// WithPayload adds the payload to the get weapon classes internal server error response
func (o *GetWeaponClassesInternalServerError) WithPayload(payload *models.Error) *GetWeaponClassesInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get weapon classes internal server error response
func (o *GetWeaponClassesInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWeaponClassesInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetWeaponClassesInternalServerError) GetWeaponClassesResponder() {}

type GetWeaponClassesNotImplementedResponder struct {
	middleware.Responder
}

func (*GetWeaponClassesNotImplementedResponder) GetWeaponClassesResponder() {}

func GetWeaponClassesNotImplemented() GetWeaponClassesResponder {
	return &GetWeaponClassesNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.GetWeaponClasses has not yet been implemented",
		),
	}
}

type GetWeaponClassesResponder interface {
	middleware.Responder
	GetWeaponClassesResponder()
}
