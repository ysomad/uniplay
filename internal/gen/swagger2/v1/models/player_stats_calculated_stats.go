// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PlayerStatsCalculatedStats высчитанная статистика на основе статистики по матчам
//
// swagger:model PlayerStats_calculated_stats
type PlayerStatsCalculatedStats struct {

	// headshot percentage
	// Required: true
	HeadshotPercentage *float64 `json:"headshot_percentage"`

	// kill death ratio
	// Required: true
	KillDeathRatio *float64 `json:"kill_death_ratio"`

	// win rate
	// Required: true
	WinRate *float64 `json:"win_rate"`
}

// Validate validates this player stats calculated stats
func (m *PlayerStatsCalculatedStats) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateHeadshotPercentage(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateKillDeathRatio(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateWinRate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PlayerStatsCalculatedStats) validateHeadshotPercentage(formats strfmt.Registry) error {

	if err := validate.Required("headshot_percentage", "body", m.HeadshotPercentage); err != nil {
		return err
	}

	return nil
}

func (m *PlayerStatsCalculatedStats) validateKillDeathRatio(formats strfmt.Registry) error {

	if err := validate.Required("kill_death_ratio", "body", m.KillDeathRatio); err != nil {
		return err
	}

	return nil
}

func (m *PlayerStatsCalculatedStats) validateWinRate(formats strfmt.Registry) error {

	if err := validate.Required("win_rate", "body", m.WinRate); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this player stats calculated stats based on context it is used
func (m *PlayerStatsCalculatedStats) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PlayerStatsCalculatedStats) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PlayerStatsCalculatedStats) UnmarshalBinary(b []byte) error {
	var res PlayerStatsCalculatedStats
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
