// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PlayerWeaponStatsInnerTotalStats player weapon stats inner total stats
//
// swagger:model PlayerWeaponStats_inner_total_stats
type PlayerWeaponStatsInnerTotalStats struct {

	// assists
	Assists int32 `json:"assists,omitempty"`

	// blind kills
	BlindKills int32 `json:"blind_kills,omitempty"`

	// chest hits
	ChestHits int32 `json:"chest_hits,omitempty"`

	// damage dealt
	DamageDealt int32 `json:"damage_dealt,omitempty"`

	// damage taken
	DamageTaken int32 `json:"damage_taken,omitempty"`

	// deaths
	Deaths int32 `json:"deaths,omitempty"`

	// head hits
	HeadHits int32 `json:"head_hits,omitempty"`

	// headshot kills
	HeadshotKills int32 `json:"headshot_kills,omitempty"`

	// kills
	Kills int32 `json:"kills,omitempty"`

	// left arm hits
	LeftArmHits int32 `json:"left_arm_hits,omitempty"`

	// left leg hits
	LeftLegHits int32 `json:"left_leg_hits,omitempty"`

	// neck hits
	NeckHits int32 `json:"neck_hits,omitempty"`

	// noscope kills
	NoscopeKills int32 `json:"noscope_kills,omitempty"`

	// right arm hits
	RightArmHits int32 `json:"right_arm_hits,omitempty"`

	// right leg hits
	RightLegHits int32 `json:"right_leg_hits,omitempty"`

	// shots
	Shots int32 `json:"shots,omitempty"`

	// stomach hits
	StomachHits int32 `json:"stomach_hits,omitempty"`

	// through smoke kills
	ThroughSmokeKills int32 `json:"through_smoke_kills,omitempty"`

	// wallbang kills
	WallbangKills int32 `json:"wallbang_kills,omitempty"`

	// weapon
	Weapon string `json:"weapon,omitempty"`

	// weapon id
	WeaponID int32 `json:"weapon_id,omitempty"`
}

// Validate validates this player weapon stats inner total stats
func (m *PlayerWeaponStatsInnerTotalStats) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this player weapon stats inner total stats based on context it is used
func (m *PlayerWeaponStatsInnerTotalStats) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PlayerWeaponStatsInnerTotalStats) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PlayerWeaponStatsInnerTotalStats) UnmarshalBinary(b []byte) error {
	var res PlayerWeaponStatsInnerTotalStats
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
