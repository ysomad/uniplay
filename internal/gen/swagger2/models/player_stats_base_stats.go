// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PlayerStatsBaseStats статистика игрока по всем сыгранным матчам
//
// swagger:model PlayerStats_base_stats
type PlayerStatsBaseStats struct {

	// assists
	Assists int32 `json:"assists,omitempty"`

	// blind kills
	BlindKills int32 `json:"blind_kills,omitempty"`

	// blinded players
	BlindedPlayers int32 `json:"blinded_players,omitempty"`

	// blinded times
	BlindedTimes int32 `json:"blinded_times,omitempty"`

	// bombs defused
	BombsDefused int32 `json:"bombs_defused,omitempty"`

	// bombs planted
	BombsPlanted int32 `json:"bombs_planted,omitempty"`

	// damage dealt
	DamageDealt int32 `json:"damage_dealt,omitempty"`

	// damage taken
	DamageTaken int32 `json:"damage_taken,omitempty"`

	// deaths
	Deaths int32 `json:"deaths,omitempty"`

	// draws
	Draws int32 `json:"draws,omitempty"`

	// flashbang assists
	FlashbangAssists int32 `json:"flashbang_assists,omitempty"`

	// grenade damage dealt
	GrenadeDamageDealt int32 `json:"grenade_damage_dealt,omitempty"`

	// headshot kills
	HeadshotKills int32 `json:"headshot_kills,omitempty"`

	// kills
	Kills int32 `json:"kills,omitempty"`

	// loses
	Loses int32 `json:"loses,omitempty"`

	// matches played
	MatchesPlayed int32 `json:"matches_played,omitempty"`

	// mvps
	Mvps int32 `json:"mvps,omitempty"`

	// noscope kills
	NoscopeKills int32 `json:"noscope_kills,omitempty"`

	// rounds played
	RoundsPlayed int32 `json:"rounds_played,omitempty"`

	// through smoke kills
	ThroughSmokeKills int32 `json:"through_smoke_kills,omitempty"`

	// time played
	TimePlayed int64 `json:"time_played,omitempty"`

	// wallbang kills
	WallbangKills int32 `json:"wallbang_kills,omitempty"`

	// wins
	Wins int32 `json:"wins,omitempty"`
}

// Validate validates this player stats base stats
func (m *PlayerStatsBaseStats) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this player stats base stats based on context it is used
func (m *PlayerStatsBaseStats) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PlayerStatsBaseStats) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PlayerStatsBaseStats) UnmarshalBinary(b []byte) error {
	var res PlayerStatsBaseStats
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
