// Code generated by go-swagger; DO NOT EDIT.

package compendium

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"github.com/ysomad/uniplay/internal/gen/swagger2/models"
)

// GetCitiesOKCode is the HTTP code returned for type GetCitiesOK
const GetCitiesOKCode int = 200

/*
GetCitiesOK OK

swagger:response getCitiesOK
*/
type GetCitiesOK struct {

	/*
	  In: Body
	*/
	Payload models.CityList `json:"body,omitempty"`
}

// NewGetCitiesOK creates GetCitiesOK with default headers values
func NewGetCitiesOK() *GetCitiesOK {

	return &GetCitiesOK{}
}

// WithPayload adds the payload to the get cities o k response
func (o *GetCitiesOK) WithPayload(payload models.CityList) *GetCitiesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get cities o k response
func (o *GetCitiesOK) SetPayload(payload models.CityList) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCitiesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = models.CityList{}
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

func (o *GetCitiesOK) GetCitiesResponder() {}

// GetCitiesInternalServerErrorCode is the HTTP code returned for type GetCitiesInternalServerError
const GetCitiesInternalServerErrorCode int = 500

/*
GetCitiesInternalServerError Internal Server Error

swagger:response getCitiesInternalServerError
*/
type GetCitiesInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetCitiesInternalServerError creates GetCitiesInternalServerError with default headers values
func NewGetCitiesInternalServerError() *GetCitiesInternalServerError {

	return &GetCitiesInternalServerError{}
}

// WithPayload adds the payload to the get cities internal server error response
func (o *GetCitiesInternalServerError) WithPayload(payload *models.Error) *GetCitiesInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get cities internal server error response
func (o *GetCitiesInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCitiesInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetCitiesInternalServerError) GetCitiesResponder() {}

type GetCitiesNotImplementedResponder struct {
	middleware.Responder
}

func (*GetCitiesNotImplementedResponder) GetCitiesResponder() {}

func GetCitiesNotImplemented() GetCitiesResponder {
	return &GetCitiesNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.GetCities has not yet been implemented",
		),
	}
}

type GetCitiesResponder interface {
	middleware.Responder
	GetCitiesResponder()
}
