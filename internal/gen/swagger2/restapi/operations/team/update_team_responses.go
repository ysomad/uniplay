// Code generated by go-swagger; DO NOT EDIT.

package team

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"github.com/ysomad/uniplay/internal/gen/swagger2/models"
)

// UpdateTeamOKCode is the HTTP code returned for type UpdateTeamOK
const UpdateTeamOKCode int = 200

/*
UpdateTeamOK OK

swagger:response updateTeamOK
*/
type UpdateTeamOK struct {

	/*
	  In: Body
	*/
	Payload *models.Player `json:"body,omitempty"`
}

// NewUpdateTeamOK creates UpdateTeamOK with default headers values
func NewUpdateTeamOK() *UpdateTeamOK {

	return &UpdateTeamOK{}
}

// WithPayload adds the payload to the update team o k response
func (o *UpdateTeamOK) WithPayload(payload *models.Player) *UpdateTeamOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update team o k response
func (o *UpdateTeamOK) SetPayload(payload *models.Player) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateTeamOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *UpdateTeamOK) UpdateTeamResponder() {}

// UpdateTeamNotFoundCode is the HTTP code returned for type UpdateTeamNotFound
const UpdateTeamNotFoundCode int = 404

/*
UpdateTeamNotFound Not Found

swagger:response updateTeamNotFound
*/
type UpdateTeamNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateTeamNotFound creates UpdateTeamNotFound with default headers values
func NewUpdateTeamNotFound() *UpdateTeamNotFound {

	return &UpdateTeamNotFound{}
}

// WithPayload adds the payload to the update team not found response
func (o *UpdateTeamNotFound) WithPayload(payload *models.Error) *UpdateTeamNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update team not found response
func (o *UpdateTeamNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateTeamNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *UpdateTeamNotFound) UpdateTeamResponder() {}

// UpdateTeamUnprocessableEntityCode is the HTTP code returned for type UpdateTeamUnprocessableEntity
const UpdateTeamUnprocessableEntityCode int = 422

/*
UpdateTeamUnprocessableEntity Unprocessable Entity

swagger:response updateTeamUnprocessableEntity
*/
type UpdateTeamUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateTeamUnprocessableEntity creates UpdateTeamUnprocessableEntity with default headers values
func NewUpdateTeamUnprocessableEntity() *UpdateTeamUnprocessableEntity {

	return &UpdateTeamUnprocessableEntity{}
}

// WithPayload adds the payload to the update team unprocessable entity response
func (o *UpdateTeamUnprocessableEntity) WithPayload(payload *models.Error) *UpdateTeamUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update team unprocessable entity response
func (o *UpdateTeamUnprocessableEntity) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateTeamUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *UpdateTeamUnprocessableEntity) UpdateTeamResponder() {}

// UpdateTeamInternalServerErrorCode is the HTTP code returned for type UpdateTeamInternalServerError
const UpdateTeamInternalServerErrorCode int = 500

/*
UpdateTeamInternalServerError Internal Server Error

swagger:response updateTeamInternalServerError
*/
type UpdateTeamInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateTeamInternalServerError creates UpdateTeamInternalServerError with default headers values
func NewUpdateTeamInternalServerError() *UpdateTeamInternalServerError {

	return &UpdateTeamInternalServerError{}
}

// WithPayload adds the payload to the update team internal server error response
func (o *UpdateTeamInternalServerError) WithPayload(payload *models.Error) *UpdateTeamInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update team internal server error response
func (o *UpdateTeamInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateTeamInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *UpdateTeamInternalServerError) UpdateTeamResponder() {}

type UpdateTeamNotImplementedResponder struct {
	middleware.Responder
}

func (*UpdateTeamNotImplementedResponder) UpdateTeamResponder() {}

func UpdateTeamNotImplemented() UpdateTeamResponder {
	return &UpdateTeamNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.UpdateTeam has not yet been implemented",
		),
	}
}

type UpdateTeamResponder interface {
	middleware.Responder
	UpdateTeamResponder()
}
