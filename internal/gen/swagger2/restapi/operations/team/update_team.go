// Code generated by go-swagger; DO NOT EDIT.

package team

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// UpdateTeamHandlerFunc turns a function with the right signature into a update team handler
type UpdateTeamHandlerFunc func(UpdateTeamParams) UpdateTeamResponder

// Handle executing the request and returning a response
func (fn UpdateTeamHandlerFunc) Handle(params UpdateTeamParams) UpdateTeamResponder {
	return fn(params)
}

// UpdateTeamHandler interface for that can handle valid update team params
type UpdateTeamHandler interface {
	Handle(UpdateTeamParams) UpdateTeamResponder
}

// NewUpdateTeam creates a new http.Handler for the update team operation
func NewUpdateTeam(ctx *middleware.Context, handler UpdateTeamHandler) *UpdateTeam {
	return &UpdateTeam{Context: ctx, Handler: handler}
}

/*
	UpdateTeam swagger:route PUT /teams/{team_id} team updateTeam

Редактирование информации о команде
*/
type UpdateTeam struct {
	Context *middleware.Context
	Handler UpdateTeamHandler
}

func (o *UpdateTeam) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewUpdateTeamParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
