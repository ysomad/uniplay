// Code generated by go-swagger; DO NOT EDIT.

package player

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetPlayerHandlerFunc turns a function with the right signature into a get player handler
type GetPlayerHandlerFunc func(GetPlayerParams) GetPlayerResponder

// Handle executing the request and returning a response
func (fn GetPlayerHandlerFunc) Handle(params GetPlayerParams) GetPlayerResponder {
	return fn(params)
}

// GetPlayerHandler interface for that can handle valid get player params
type GetPlayerHandler interface {
	Handle(GetPlayerParams) GetPlayerResponder
}

// NewGetPlayer creates a new http.Handler for the get player operation
func NewGetPlayer(ctx *middleware.Context, handler GetPlayerHandler) *GetPlayer {
	return &GetPlayer{Context: ctx, Handler: handler}
}

/*
	GetPlayer swagger:route GET /players/{steam_id} player getPlayer

Получение информации об игроке
*/
type GetPlayer struct {
	Context *middleware.Context
	Handler GetPlayerHandler
}

func (o *GetPlayer) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetPlayerParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
