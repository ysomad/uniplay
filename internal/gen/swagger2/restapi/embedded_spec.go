// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Uniplay private API",
    "version": "0.0.1"
  },
  "host": "localhost:8080",
  "basePath": "/v1",
  "paths": {
    "/accounts": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "account"
        ],
        "summary": "Регистрация аккаунта",
        "operationId": "createAccount",
        "parameters": [
          {
            "name": "payload",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/compendiums/cities": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "compendium"
        ],
        "summary": "Получение списка городов",
        "operationId": "getCities",
        "parameters": [
          {
            "type": "string",
            "description": "Поиск по названию города",
            "name": "search",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CityList"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/compendiums/maps": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "compendium"
        ],
        "summary": "Получение списка карт",
        "operationId": "getMaps",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MapList"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/compendiums/weapon-classes": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "compendium"
        ],
        "summary": "Получение списка классов оружий",
        "operationId": "getWeaponClasses",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WeaponClassList"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/compendiums/weapons": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "compendium"
        ],
        "summary": "Получение списка оружий",
        "operationId": "getWeapons",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WeaponList"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/institutions": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "institution"
        ],
        "summary": "Получение списка учебных заведений",
        "operationId": "getInstitutions",
        "parameters": [
          {
            "type": "string",
            "description": "Поиск по названиям и аббревиатурам уч. заведений",
            "name": "search",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Фильтр по городу",
            "name": "city",
            "in": "query"
          },
          {
            "enum": [
              1,
              2
            ],
            "type": "integer",
            "format": "int8",
            "description": "Тип учебного заведения:\n * 1 - ВУЗы\n * 2 - ССУЗы\n",
            "name": "type",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Количество значений на странице. Минимум — 1, максимум — 500.",
            "name": "page_size",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Идентификатор последнего значения на странице. Оставьте это поле пустым при выполнении первого запроса. Чтобы получить следующие значения, укажите last_id из ответа предыдущего запроса.",
            "name": "last_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InstitutionList"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/matches": {
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "match"
        ],
        "summary": "Создание матча из записи",
        "operationId": "createMatch",
        "parameters": [
          {
            "type": "file",
            "description": "файл записи матча с расширением .dem",
            "name": "replay",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateMatchResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/matches/{match_id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "match"
        ],
        "summary": "Получение информации о матче",
        "operationId": "getMatch",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "ID матча",
            "name": "match_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Match"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "match"
        ],
        "summary": "Удаление матча",
        "operationId": "deleteMatch",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "ID матча",
            "name": "match_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/players": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "player"
        ],
        "summary": "Получение списка игроков",
        "operationId": "getPlayerList",
        "parameters": [
          {
            "type": "string",
            "description": "Поиск по никнейму, имени и фамилии",
            "name": "search",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Количество значений на странице. Минимум — 1, максимум — 500.",
            "name": "page_size",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Идентификатор последнего значения на странице. Оставьте это поле пустым при выполнении первого запроса. Чтобы получить следующие значения, укажите last_steam_id из ответа предыдущего запроса.",
            "name": "last_steam_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PlayerList"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/players/{steam_id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "player"
        ],
        "summary": "Получение информации об игроке",
        "operationId": "getPlayer",
        "parameters": [
          {
            "type": "string",
            "description": "Steam ID игрока",
            "name": "steam_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Player"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "player"
        ],
        "summary": "Редактирование информации об игроке",
        "operationId": "updatePlayer",
        "parameters": [
          {
            "type": "string",
            "description": "Steam ID игрока",
            "name": "steam_id",
            "in": "path",
            "required": true
          },
          {
            "name": "payload",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdatePlayerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Player"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/players/{steam_id}/matches": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "player"
        ],
        "summary": "Получение матчей игрока",
        "operationId": "getPlayerMatches",
        "parameters": [
          {
            "type": "string",
            "description": "Steam ID игрока",
            "name": "steam_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Количество значений на странице. Минимум — 1, максимум — 500.",
            "name": "page_size",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Токен следующей страницы в base64 формате",
            "name": "page_token",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PlayerMatchList"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/players/{steam_id}/most-played-maps": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "player"
        ],
        "summary": "Получение списка карт сыгранных наибольшее кол-во раз",
        "operationId": "getMostPlayedMaps",
        "parameters": [
          {
            "type": "string",
            "description": "Steam ID игрока",
            "name": "steam_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MostPlayedMaps"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/players/{steam_id}/stats": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "player"
        ],
        "summary": "Получение статистики игрока",
        "operationId": "getPlayerStats",
        "parameters": [
          {
            "type": "string",
            "description": "Steam ID игрока",
            "name": "steam_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PlayerStats"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/players/{steam_id}/weapon-stats": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "player"
        ],
        "summary": "Получение статистики игрока по оружию",
        "operationId": "getWeaponStats",
        "parameters": [
          {
            "type": "string",
            "description": "Steam ID игрока",
            "name": "steam_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int16",
            "description": "Фильтр по оружию",
            "name": "weapon_id",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int16",
            "description": "Фильтр по классу оружия",
            "name": "class_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PlayerWeaponStats"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/teams": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "team"
        ],
        "summary": "Получение списка команд",
        "operationId": "getTeamList",
        "parameters": [
          {
            "type": "string",
            "description": "Поиск по названию команды",
            "name": "search",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Количество значений на странице. Минимум — 1, максимум — 500.",
            "name": "page_size",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Идентификатор последнего значения на странице. Оставьте это поле пустым при выполнении первого запроса. Чтобы получить следующие значения, укажите last_id из ответа предыдущего запроса.",
            "name": "last_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TeamList"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/teams/{team_id}": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "team"
        ],
        "summary": "Редактирование информации о команде",
        "operationId": "updateTeam",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "description": "ID команды",
            "name": "team_id",
            "in": "path",
            "required": true
          },
          {
            "name": "payload",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateTeamRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Team"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/teams/{team_id}/players": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "team"
        ],
        "summary": "Получение списка игроков команды",
        "operationId": "getTeamPlayers",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "description": "ID команды",
            "name": "team_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TeamPlayerList"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/teams/{team_id}/players/{steam_id}/captain": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "team"
        ],
        "summary": "Назначить игрока капитаном команды",
        "operationId": "setTeamCaptain",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "description": "ID команды",
            "name": "team_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Steam ID игрока",
            "name": "steam_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Account": {
      "type": "object",
      "required": [
        "created_at",
        "email",
        "id",
        "is_admin",
        "is_verified"
      ],
      "properties": {
        "created_at": {
          "type": "string",
          "format": "datetime",
          "x-nullable": false
        },
        "email": {
          "type": "string",
          "x-nullable": false
        },
        "id": {
          "type": "string",
          "x-nullable": false
        },
        "is_admin": {
          "type": "boolean",
          "x-nullable": false
        },
        "is_verified": {
          "type": "boolean",
          "x-nullable": false
        }
      }
    },
    "AccountCreateRequest": {
      "type": "object",
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string",
          "format": "email",
          "x-nullable": false
        },
        "password": {
          "type": "string",
          "maxLength": 256,
          "minLength": 8,
          "x-nullable": false
        }
      }
    },
    "City": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "x-nullable": false
        }
      },
      "x-nullable": false
    },
    "CityList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/City"
      }
    },
    "CreateMatchResponse": {
      "type": "object",
      "required": [
        "match_id"
      ],
      "properties": {
        "match_id": {
          "type": "string",
          "format": "uuid",
          "x-isnullable": false
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "description": "код ошибки, равен статусу или \u003e= 600",
          "type": "integer",
          "format": "int32",
          "x-nullable": false
        },
        "message": {
          "description": "сообщение ошибки",
          "type": "string",
          "x-nullable": false
        }
      }
    },
    "InstitutionList": {
      "type": "object",
      "required": [
        "has_next",
        "institutions"
      ],
      "properties": {
        "has_next": {
          "type": "boolean",
          "x-nullable": false
        },
        "institutions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InstitutionList_institutions"
          }
        }
      }
    },
    "InstitutionList_institutions": {
      "type": "object",
      "required": [
        "city",
        "id",
        "logo_url",
        "name",
        "short_name",
        "type"
      ],
      "properties": {
        "city": {
          "type": "string",
          "x-nullable": false
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "x-nullable": false
        },
        "logo_url": {
          "type": "string",
          "x-nullable": false
        },
        "name": {
          "type": "string",
          "x-nullable": false
        },
        "short_name": {
          "type": "string",
          "x-nullable": false
        },
        "type": {
          "type": "integer",
          "format": "int8",
          "x-nullable": false
        }
      },
      "x-go-name": "InstitutionListItem",
      "x-nullable": false
    },
    "Map": {
      "type": "object",
      "required": [
        "icon_url",
        "name"
      ],
      "properties": {
        "icon_url": {
          "type": "string",
          "x-nullable": false
        },
        "name": {
          "description": "Название карты, например, Cobblestone",
          "type": "string",
          "x-nullable": false
        }
      },
      "x-nullable": false
    },
    "MapList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Map"
      }
    },
    "Match": {
      "type": "object",
      "properties": {
        "duration": {
          "description": "длительность матча в минутах",
          "type": "integer",
          "format": "int32",
          "x-nullable": false
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "x-nullable": false
        },
        "map": {
          "$ref": "#/definitions/Map"
        },
        "rounds_played": {
          "type": "integer",
          "format": "int32",
          "x-nullable": false
        },
        "team1": {
          "$ref": "#/definitions/MatchTeam"
        },
        "team2": {
          "$ref": "#/definitions/MatchTeam"
        },
        "uploaded_at": {
          "type": "string",
          "format": "date-time",
          "x-nullable": false
        }
      }
    },
    "MatchTeam": {
      "type": "object",
      "properties": {
        "clan_name": {
          "type": "string",
          "x-nullable": false
        },
        "flag_code": {
          "type": "string",
          "x-nullable": false
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "x-nullable": false
        },
        "score": {
          "type": "integer",
          "format": "int32",
          "x-nullable": false
        },
        "scoreboard": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MatchTeam_scoreboard"
          }
        }
      },
      "x-nullable": false
    },
    "MatchTeam_scoreboard": {
      "type": "object",
      "required": [
        "is_player_captain",
        "player_name",
        "steam_id"
      ],
      "properties": {
        "adr": {
          "type": "number",
          "format": "double",
          "x-go-name": "ADR"
        },
        "assists": {
          "type": "integer",
          "format": "int32"
        },
        "deaths": {
          "type": "integer",
          "format": "int32"
        },
        "headshot_percentage": {
          "type": "number",
          "format": "double"
        },
        "is_player_captain": {
          "type": "boolean",
          "x-nullable": false
        },
        "kd": {
          "type": "number",
          "format": "double",
          "x-go-name": "KD"
        },
        "kills": {
          "type": "integer",
          "format": "int32"
        },
        "mvps": {
          "type": "integer",
          "format": "int32"
        },
        "player_avatar_url": {
          "type": "string"
        },
        "player_name": {
          "type": "string",
          "x-nullable": false
        },
        "steam_id": {
          "type": "string",
          "x-nullable": false
        }
      },
      "x-nullable": false
    },
    "MostPlayedMaps": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/MostPlayedMaps_inner"
      }
    },
    "MostPlayedMaps_inner": {
      "type": "object",
      "required": [
        "map_icon_url",
        "map_name",
        "played_times"
      ],
      "properties": {
        "map_icon_url": {
          "type": "string",
          "x-nullable": false
        },
        "map_name": {
          "type": "string",
          "x-nullable": false
        },
        "played_times": {
          "type": "integer",
          "format": "int8",
          "x-nullable": false
        }
      },
      "x-go-name": "MostPlayedMap",
      "x-nullable": false
    },
    "Player": {
      "type": "object",
      "required": [
        "steam_id"
      ],
      "properties": {
        "avatar_url": {
          "type": "string",
          "x-nullable": false
        },
        "display_name": {
          "type": "string",
          "x-nullable": false
        },
        "first_name": {
          "type": "string",
          "x-nullable": false
        },
        "last_name": {
          "type": "string",
          "x-nullable": false
        },
        "steam_id": {
          "type": "string",
          "x-nullable": false
        },
        "team_id": {
          "type": "integer",
          "format": "int32",
          "x-nullable": false
        }
      }
    },
    "PlayerList": {
      "type": "object",
      "required": [
        "has_next",
        "players"
      ],
      "properties": {
        "has_next": {
          "type": "boolean",
          "x-nullable": false
        },
        "players": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlayerList_players"
          }
        }
      }
    },
    "PlayerList_players": {
      "type": "object",
      "required": [
        "steam_id"
      ],
      "properties": {
        "avatar_url": {
          "type": "string",
          "x-nullable": false
        },
        "display_name": {
          "type": "string",
          "x-nullable": false
        },
        "first_name": {
          "type": "string",
          "x-nullable": false
        },
        "last_name": {
          "type": "string",
          "x-nullable": false
        },
        "steam_id": {
          "type": "string",
          "x-nullable": false
        },
        "team_id": {
          "type": "integer",
          "format": "int32",
          "x-nullable": false
        }
      },
      "x-go-name": "PlayerListItem",
      "x-nullable": false
    },
    "PlayerMatch": {
      "type": "object",
      "required": [
        "id",
        "map",
        "match_state",
        "match_stats",
        "score",
        "uploaded_at"
      ],
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "x-nullable": false
        },
        "map": {
          "$ref": "#/definitions/Map"
        },
        "match_state": {
          "description": "Состояние матча:\n * -1 - Проигрыш\n * 0 - Ничья\n * 1 - Победа\n",
          "type": "integer",
          "format": "int8",
          "x-nullable": false
        },
        "match_stats": {
          "$ref": "#/definitions/PlayerMatch_match_stats"
        },
        "score": {
          "type": "string",
          "x-nullable": false
        },
        "uploaded_at": {
          "type": "string",
          "format": "date-time",
          "x-nullable": false
        }
      },
      "x-nullable": false
    },
    "PlayerMatchList": {
      "type": "object",
      "required": [
        "matches",
        "next_page_token"
      ],
      "properties": {
        "matches": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlayerMatch"
          }
        },
        "next_page_token": {
          "type": "string",
          "x-nullable": false
        }
      }
    },
    "PlayerMatch_match_stats": {
      "type": "object",
      "required": [
        "adr",
        "assists",
        "deaths",
        "headshot_percentage",
        "kills"
      ],
      "properties": {
        "adr": {
          "type": "number",
          "format": "double",
          "x-go-name": "ADR",
          "x-nullable": false
        },
        "assists": {
          "type": "integer",
          "format": "int32",
          "x-nullable": false
        },
        "deaths": {
          "type": "integer",
          "format": "int32",
          "x-nullable": false
        },
        "headshot_percentage": {
          "type": "number",
          "format": "double",
          "x-nullable": false
        },
        "kills": {
          "type": "integer",
          "format": "int32",
          "x-nullable": false
        }
      }
    },
    "PlayerStats": {
      "type": "object",
      "required": [
        "base_stats",
        "calculated_stats"
      ],
      "properties": {
        "base_stats": {
          "$ref": "#/definitions/PlayerStats_base_stats"
        },
        "calculated_stats": {
          "$ref": "#/definitions/PlayerStats_calculated_stats"
        }
      }
    },
    "PlayerStats_base_stats": {
      "description": "статистика игрока по всем сыгранным матчам",
      "type": "object",
      "properties": {
        "assists": {
          "type": "integer",
          "format": "int32"
        },
        "blind_kills": {
          "type": "integer",
          "format": "int32"
        },
        "blinded_players": {
          "type": "integer",
          "format": "int32"
        },
        "blinded_times": {
          "type": "integer",
          "format": "int32"
        },
        "bombs_defused": {
          "type": "integer",
          "format": "int32"
        },
        "bombs_planted": {
          "type": "integer",
          "format": "int32"
        },
        "damage_dealt": {
          "type": "integer",
          "format": "int32"
        },
        "damage_taken": {
          "type": "integer",
          "format": "int32"
        },
        "deaths": {
          "type": "integer",
          "format": "int32"
        },
        "draws": {
          "type": "integer",
          "format": "int32"
        },
        "flashbang_assists": {
          "type": "integer",
          "format": "int32"
        },
        "grenade_damage_dealt": {
          "type": "integer",
          "format": "int32"
        },
        "headshot_kills": {
          "type": "integer",
          "format": "int32"
        },
        "kills": {
          "type": "integer",
          "format": "int32"
        },
        "loses": {
          "type": "integer",
          "format": "int32"
        },
        "matches_played": {
          "type": "integer",
          "format": "int32"
        },
        "mvps": {
          "type": "integer",
          "format": "int32"
        },
        "noscope_kills": {
          "type": "integer",
          "format": "int32"
        },
        "rounds_played": {
          "type": "integer",
          "format": "int32"
        },
        "through_smoke_kills": {
          "type": "integer",
          "format": "int32"
        },
        "time_played": {
          "type": "integer",
          "format": "int64"
        },
        "wallbang_kills": {
          "type": "integer",
          "format": "int32"
        },
        "wins": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PlayerStats_calculated_stats": {
      "description": "высчитанная статистика на основе статистики по матчам",
      "type": "object",
      "properties": {
        "adr": {
          "description": "средний урон за раунд",
          "type": "number",
          "format": "double",
          "x-go-name": "ADR"
        },
        "assists_per_round": {
          "description": "среднее кол-во ассистов за раунд",
          "type": "number",
          "format": "double"
        },
        "blinded_players_per_round": {
          "description": "средне кол-во ослепленных игроков за раунд",
          "type": "number",
          "format": "double"
        },
        "deaths_per_round": {
          "description": "среднее кол-во смертей за раунд",
          "type": "number",
          "format": "double"
        },
        "grenade_damage_per_round": {
          "description": "средний урон гранатами за раунд",
          "type": "number",
          "format": "double"
        },
        "headshot_percentage": {
          "type": "number",
          "format": "double"
        },
        "kd": {
          "type": "number",
          "format": "double",
          "x-go-name": "KD"
        },
        "kills_per_round": {
          "description": "среднее кол-во убийств за раунд",
          "type": "number",
          "format": "double"
        },
        "win_rate": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "PlayerWeaponStats": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/PlayerWeaponStats_inner"
      }
    },
    "PlayerWeaponStats_inner": {
      "type": "object",
      "required": [
        "accuracy_stats",
        "base_stats"
      ],
      "properties": {
        "accuracy_stats": {
          "$ref": "#/definitions/PlayerWeaponStats_inner_accuracy_stats"
        },
        "base_stats": {
          "$ref": "#/definitions/PlayerWeaponStats_inner_base_stats"
        },
        "weapon": {
          "type": "string"
        },
        "weapon_id": {
          "type": "integer",
          "format": "int16"
        }
      },
      "x-nullable": false
    },
    "PlayerWeaponStats_inner_accuracy_stats": {
      "type": "object",
      "properties": {
        "arms": {
          "type": "number",
          "format": "double"
        },
        "chest": {
          "type": "number",
          "format": "double"
        },
        "head": {
          "type": "number",
          "format": "double"
        },
        "legs": {
          "type": "number",
          "format": "double"
        },
        "neck": {
          "type": "number",
          "format": "double"
        },
        "stomach": {
          "type": "number",
          "format": "double"
        },
        "total": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "PlayerWeaponStats_inner_base_stats": {
      "type": "object",
      "properties": {
        "arm_hits": {
          "type": "integer",
          "format": "int32"
        },
        "assists": {
          "type": "integer",
          "format": "int32"
        },
        "blind_kills": {
          "type": "integer",
          "format": "int32"
        },
        "chest_hits": {
          "type": "integer",
          "format": "int32"
        },
        "damage_dealt": {
          "type": "integer",
          "format": "int32"
        },
        "damage_taken": {
          "type": "integer",
          "format": "int32"
        },
        "deaths": {
          "type": "integer",
          "format": "int32"
        },
        "head_hits": {
          "type": "integer",
          "format": "int32"
        },
        "headshot_kills": {
          "type": "integer",
          "format": "int32"
        },
        "kills": {
          "type": "integer",
          "format": "int32"
        },
        "leg_hits": {
          "type": "integer",
          "format": "int32"
        },
        "neck_hits": {
          "type": "integer",
          "format": "int32"
        },
        "noscope_kills": {
          "type": "integer",
          "format": "int32"
        },
        "shots": {
          "type": "integer",
          "format": "int32"
        },
        "stomach_hits": {
          "type": "integer",
          "format": "int32"
        },
        "through_smoke_kills": {
          "type": "integer",
          "format": "int32"
        },
        "total_hits": {
          "type": "integer",
          "format": "int32"
        },
        "wallbang_kills": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Team": {
      "type": "object",
      "required": [
        "clan_name",
        "id"
      ],
      "properties": {
        "clan_name": {
          "type": "string",
          "x-nullable": false
        },
        "flag_code": {
          "type": "string",
          "x-nullable": false
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "x-nullable": false
        },
        "institution_id": {
          "type": "integer",
          "format": "int32",
          "x-nullable": false
        }
      }
    },
    "TeamList": {
      "type": "object",
      "required": [
        "has_next",
        "teams"
      ],
      "properties": {
        "has_next": {
          "type": "boolean",
          "x-nullable": false
        },
        "teams": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TeamList_teams"
          }
        }
      }
    },
    "TeamList_institution": {
      "type": "object",
      "properties": {
        "city": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "logo_url": {
          "type": "string"
        },
        "short_name": {
          "type": "string"
        },
        "type": {
          "type": "integer",
          "format": "int8"
        }
      },
      "x-go-name": "TeamListInstitution"
    },
    "TeamList_teams": {
      "type": "object",
      "required": [
        "clan_name",
        "id"
      ],
      "properties": {
        "clan_name": {
          "type": "string",
          "x-nullable": false
        },
        "flag_code": {
          "type": "string",
          "x-nullable": false
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "x-nullable": false
        },
        "institution": {
          "$ref": "#/definitions/TeamList_institution"
        }
      },
      "x-go-name": "TeamListItem",
      "x-nullable": false
    },
    "TeamPlayerList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/TeamPlayerList_inner"
      }
    },
    "TeamPlayerList_inner": {
      "type": "object",
      "required": [
        "is_captain",
        "steam_id"
      ],
      "properties": {
        "avatar_url": {
          "type": "string",
          "x-nullable": false
        },
        "display_name": {
          "type": "string",
          "x-nullable": false
        },
        "first_name": {
          "type": "string",
          "x-nullable": false
        },
        "is_captain": {
          "type": "boolean",
          "x-nullable": false
        },
        "last_name": {
          "type": "string",
          "x-nullable": false
        },
        "steam_id": {
          "type": "string",
          "x-nullable": false
        }
      },
      "x-go-name": "TeamPlayerListItem",
      "x-nullable": false
    },
    "UpdatePlayerRequest": {
      "type": "object",
      "required": [
        "avatar_url",
        "first_name",
        "last_name"
      ],
      "properties": {
        "avatar_url": {
          "type": "string",
          "format": "uri",
          "x-nullable": false
        },
        "first_name": {
          "type": "string",
          "maxLength": 32,
          "minLength": 2,
          "x-nullable": false
        },
        "last_name": {
          "type": "string",
          "maxLength": 32,
          "minLength": 2,
          "x-nullable": false
        }
      }
    },
    "UpdateTeamRequest": {
      "type": "object",
      "required": [
        "clan_name",
        "flag_code",
        "institution_id"
      ],
      "properties": {
        "clan_name": {
          "type": "string",
          "maxLength": 16,
          "minLength": 2,
          "x-nullable": false
        },
        "flag_code": {
          "type": "string",
          "maxLength": 2,
          "minLength": 2,
          "x-nullable": false
        },
        "institution_id": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "x-nullable": false
        }
      }
    },
    "WeaponClassList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/WeaponClassList_inner"
      }
    },
    "WeaponClassList_inner": {
      "type": "object",
      "required": [
        "class",
        "id"
      ],
      "properties": {
        "class": {
          "type": "string",
          "x-nullable": false
        },
        "id": {
          "type": "integer",
          "format": "int16",
          "x-nullable": false
        }
      },
      "x-nullable": false
    },
    "WeaponList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/WeaponList_inner"
      }
    },
    "WeaponList_inner": {
      "type": "object",
      "required": [
        "class",
        "class_id",
        "weapon",
        "weapon_id"
      ],
      "properties": {
        "class": {
          "description": "имя класса оружия",
          "type": "string",
          "x-nullable": false
        },
        "class_id": {
          "type": "integer",
          "format": "int16",
          "x-nullable": false
        },
        "weapon": {
          "description": "название оружия",
          "type": "string",
          "x-nullable": false
        },
        "weapon_id": {
          "type": "integer",
          "format": "int16",
          "x-nullable": false
        }
      },
      "x-nullable": false
    }
  },
  "tags": [
    {
      "description": "Аккаунт",
      "name": "account"
    },
    {
      "description": "Игрок",
      "name": "player"
    },
    {
      "description": "Команда",
      "name": "team"
    },
    {
      "description": "Матч",
      "name": "match"
    },
    {
      "description": "Учебное заведение",
      "name": "institution"
    },
    {
      "description": "Справочник",
      "name": "compendium"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Uniplay private API",
    "version": "0.0.1"
  },
  "host": "localhost:8080",
  "basePath": "/v1",
  "paths": {
    "/accounts": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "account"
        ],
        "summary": "Регистрация аккаунта",
        "operationId": "createAccount",
        "parameters": [
          {
            "name": "payload",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/compendiums/cities": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "compendium"
        ],
        "summary": "Получение списка городов",
        "operationId": "getCities",
        "parameters": [
          {
            "type": "string",
            "description": "Поиск по названию города",
            "name": "search",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CityList"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/compendiums/maps": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "compendium"
        ],
        "summary": "Получение списка карт",
        "operationId": "getMaps",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MapList"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/compendiums/weapon-classes": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "compendium"
        ],
        "summary": "Получение списка классов оружий",
        "operationId": "getWeaponClasses",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WeaponClassList"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/compendiums/weapons": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "compendium"
        ],
        "summary": "Получение списка оружий",
        "operationId": "getWeapons",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WeaponList"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/institutions": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "institution"
        ],
        "summary": "Получение списка учебных заведений",
        "operationId": "getInstitutions",
        "parameters": [
          {
            "type": "string",
            "description": "Поиск по названиям и аббревиатурам уч. заведений",
            "name": "search",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Фильтр по городу",
            "name": "city",
            "in": "query"
          },
          {
            "enum": [
              1,
              2
            ],
            "type": "integer",
            "format": "int8",
            "description": "Тип учебного заведения:\n * 1 - ВУЗы\n * 2 - ССУЗы\n",
            "name": "type",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Количество значений на странице. Минимум — 1, максимум — 500.",
            "name": "page_size",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Идентификатор последнего значения на странице. Оставьте это поле пустым при выполнении первого запроса. Чтобы получить следующие значения, укажите last_id из ответа предыдущего запроса.",
            "name": "last_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InstitutionList"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/matches": {
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "match"
        ],
        "summary": "Создание матча из записи",
        "operationId": "createMatch",
        "parameters": [
          {
            "type": "file",
            "description": "файл записи матча с расширением .dem",
            "name": "replay",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateMatchResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/matches/{match_id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "match"
        ],
        "summary": "Получение информации о матче",
        "operationId": "getMatch",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "ID матча",
            "name": "match_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Match"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "match"
        ],
        "summary": "Удаление матча",
        "operationId": "deleteMatch",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "ID матча",
            "name": "match_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/players": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "player"
        ],
        "summary": "Получение списка игроков",
        "operationId": "getPlayerList",
        "parameters": [
          {
            "type": "string",
            "description": "Поиск по никнейму, имени и фамилии",
            "name": "search",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Количество значений на странице. Минимум — 1, максимум — 500.",
            "name": "page_size",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Идентификатор последнего значения на странице. Оставьте это поле пустым при выполнении первого запроса. Чтобы получить следующие значения, укажите last_steam_id из ответа предыдущего запроса.",
            "name": "last_steam_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PlayerList"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/players/{steam_id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "player"
        ],
        "summary": "Получение информации об игроке",
        "operationId": "getPlayer",
        "parameters": [
          {
            "type": "string",
            "description": "Steam ID игрока",
            "name": "steam_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Player"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "player"
        ],
        "summary": "Редактирование информации об игроке",
        "operationId": "updatePlayer",
        "parameters": [
          {
            "type": "string",
            "description": "Steam ID игрока",
            "name": "steam_id",
            "in": "path",
            "required": true
          },
          {
            "name": "payload",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdatePlayerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Player"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/players/{steam_id}/matches": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "player"
        ],
        "summary": "Получение матчей игрока",
        "operationId": "getPlayerMatches",
        "parameters": [
          {
            "type": "string",
            "description": "Steam ID игрока",
            "name": "steam_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Количество значений на странице. Минимум — 1, максимум — 500.",
            "name": "page_size",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Токен следующей страницы в base64 формате",
            "name": "page_token",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PlayerMatchList"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/players/{steam_id}/most-played-maps": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "player"
        ],
        "summary": "Получение списка карт сыгранных наибольшее кол-во раз",
        "operationId": "getMostPlayedMaps",
        "parameters": [
          {
            "type": "string",
            "description": "Steam ID игрока",
            "name": "steam_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MostPlayedMaps"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/players/{steam_id}/stats": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "player"
        ],
        "summary": "Получение статистики игрока",
        "operationId": "getPlayerStats",
        "parameters": [
          {
            "type": "string",
            "description": "Steam ID игрока",
            "name": "steam_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PlayerStats"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/players/{steam_id}/weapon-stats": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "player"
        ],
        "summary": "Получение статистики игрока по оружию",
        "operationId": "getWeaponStats",
        "parameters": [
          {
            "type": "string",
            "description": "Steam ID игрока",
            "name": "steam_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int16",
            "description": "Фильтр по оружию",
            "name": "weapon_id",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int16",
            "description": "Фильтр по классу оружия",
            "name": "class_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PlayerWeaponStats"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/teams": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "team"
        ],
        "summary": "Получение списка команд",
        "operationId": "getTeamList",
        "parameters": [
          {
            "type": "string",
            "description": "Поиск по названию команды",
            "name": "search",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Количество значений на странице. Минимум — 1, максимум — 500.",
            "name": "page_size",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Идентификатор последнего значения на странице. Оставьте это поле пустым при выполнении первого запроса. Чтобы получить следующие значения, укажите last_id из ответа предыдущего запроса.",
            "name": "last_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TeamList"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/teams/{team_id}": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "team"
        ],
        "summary": "Редактирование информации о команде",
        "operationId": "updateTeam",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "description": "ID команды",
            "name": "team_id",
            "in": "path",
            "required": true
          },
          {
            "name": "payload",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateTeamRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Team"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/teams/{team_id}/players": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "team"
        ],
        "summary": "Получение списка игроков команды",
        "operationId": "getTeamPlayers",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "description": "ID команды",
            "name": "team_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TeamPlayerList"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/teams/{team_id}/players/{steam_id}/captain": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "team"
        ],
        "summary": "Назначить игрока капитаном команды",
        "operationId": "setTeamCaptain",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "description": "ID команды",
            "name": "team_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Steam ID игрока",
            "name": "steam_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Account": {
      "type": "object",
      "required": [
        "created_at",
        "email",
        "id",
        "is_admin",
        "is_verified"
      ],
      "properties": {
        "created_at": {
          "type": "string",
          "format": "datetime",
          "x-nullable": false
        },
        "email": {
          "type": "string",
          "x-nullable": false
        },
        "id": {
          "type": "string",
          "x-nullable": false
        },
        "is_admin": {
          "type": "boolean",
          "x-nullable": false
        },
        "is_verified": {
          "type": "boolean",
          "x-nullable": false
        }
      }
    },
    "AccountCreateRequest": {
      "type": "object",
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string",
          "format": "email",
          "x-nullable": false
        },
        "password": {
          "type": "string",
          "maxLength": 256,
          "minLength": 8,
          "x-nullable": false
        }
      }
    },
    "City": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "x-nullable": false
        }
      },
      "x-nullable": false
    },
    "CityList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/City"
      }
    },
    "CreateMatchResponse": {
      "type": "object",
      "required": [
        "match_id"
      ],
      "properties": {
        "match_id": {
          "type": "string",
          "format": "uuid",
          "x-isnullable": false
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "description": "код ошибки, равен статусу или \u003e= 600",
          "type": "integer",
          "format": "int32",
          "x-nullable": false
        },
        "message": {
          "description": "сообщение ошибки",
          "type": "string",
          "x-nullable": false
        }
      }
    },
    "InstitutionList": {
      "type": "object",
      "required": [
        "has_next",
        "institutions"
      ],
      "properties": {
        "has_next": {
          "type": "boolean",
          "x-nullable": false
        },
        "institutions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InstitutionList_institutions"
          }
        }
      }
    },
    "InstitutionList_institutions": {
      "type": "object",
      "required": [
        "city",
        "id",
        "logo_url",
        "name",
        "short_name",
        "type"
      ],
      "properties": {
        "city": {
          "type": "string",
          "x-nullable": false
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "x-nullable": false
        },
        "logo_url": {
          "type": "string",
          "x-nullable": false
        },
        "name": {
          "type": "string",
          "x-nullable": false
        },
        "short_name": {
          "type": "string",
          "x-nullable": false
        },
        "type": {
          "type": "integer",
          "format": "int8",
          "x-nullable": false
        }
      },
      "x-go-name": "InstitutionListItem",
      "x-nullable": false
    },
    "Map": {
      "type": "object",
      "required": [
        "icon_url",
        "name"
      ],
      "properties": {
        "icon_url": {
          "type": "string",
          "x-nullable": false
        },
        "name": {
          "description": "Название карты, например, Cobblestone",
          "type": "string",
          "x-nullable": false
        }
      },
      "x-nullable": false
    },
    "MapList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Map"
      }
    },
    "Match": {
      "type": "object",
      "properties": {
        "duration": {
          "description": "длительность матча в минутах",
          "type": "integer",
          "format": "int32",
          "x-nullable": false
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "x-nullable": false
        },
        "map": {
          "$ref": "#/definitions/Map"
        },
        "rounds_played": {
          "type": "integer",
          "format": "int32",
          "x-nullable": false
        },
        "team1": {
          "$ref": "#/definitions/MatchTeam"
        },
        "team2": {
          "$ref": "#/definitions/MatchTeam"
        },
        "uploaded_at": {
          "type": "string",
          "format": "date-time",
          "x-nullable": false
        }
      }
    },
    "MatchTeam": {
      "type": "object",
      "properties": {
        "clan_name": {
          "type": "string",
          "x-nullable": false
        },
        "flag_code": {
          "type": "string",
          "x-nullable": false
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "x-nullable": false
        },
        "score": {
          "type": "integer",
          "format": "int32",
          "x-nullable": false
        },
        "scoreboard": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MatchTeam_scoreboard"
          }
        }
      },
      "x-nullable": false
    },
    "MatchTeam_scoreboard": {
      "type": "object",
      "required": [
        "is_player_captain",
        "player_name",
        "steam_id"
      ],
      "properties": {
        "adr": {
          "type": "number",
          "format": "double",
          "x-go-name": "ADR"
        },
        "assists": {
          "type": "integer",
          "format": "int32"
        },
        "deaths": {
          "type": "integer",
          "format": "int32"
        },
        "headshot_percentage": {
          "type": "number",
          "format": "double"
        },
        "is_player_captain": {
          "type": "boolean",
          "x-nullable": false
        },
        "kd": {
          "type": "number",
          "format": "double",
          "x-go-name": "KD"
        },
        "kills": {
          "type": "integer",
          "format": "int32"
        },
        "mvps": {
          "type": "integer",
          "format": "int32"
        },
        "player_avatar_url": {
          "type": "string"
        },
        "player_name": {
          "type": "string",
          "x-nullable": false
        },
        "steam_id": {
          "type": "string",
          "x-nullable": false
        }
      },
      "x-nullable": false
    },
    "MostPlayedMaps": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/MostPlayedMaps_inner"
      }
    },
    "MostPlayedMaps_inner": {
      "type": "object",
      "required": [
        "map_icon_url",
        "map_name",
        "played_times"
      ],
      "properties": {
        "map_icon_url": {
          "type": "string",
          "x-nullable": false
        },
        "map_name": {
          "type": "string",
          "x-nullable": false
        },
        "played_times": {
          "type": "integer",
          "format": "int8",
          "x-nullable": false
        }
      },
      "x-go-name": "MostPlayedMap",
      "x-nullable": false
    },
    "Player": {
      "type": "object",
      "required": [
        "steam_id"
      ],
      "properties": {
        "avatar_url": {
          "type": "string",
          "x-nullable": false
        },
        "display_name": {
          "type": "string",
          "x-nullable": false
        },
        "first_name": {
          "type": "string",
          "x-nullable": false
        },
        "last_name": {
          "type": "string",
          "x-nullable": false
        },
        "steam_id": {
          "type": "string",
          "x-nullable": false
        },
        "team_id": {
          "type": "integer",
          "format": "int32",
          "x-nullable": false
        }
      }
    },
    "PlayerList": {
      "type": "object",
      "required": [
        "has_next",
        "players"
      ],
      "properties": {
        "has_next": {
          "type": "boolean",
          "x-nullable": false
        },
        "players": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlayerList_players"
          }
        }
      }
    },
    "PlayerList_players": {
      "type": "object",
      "required": [
        "steam_id"
      ],
      "properties": {
        "avatar_url": {
          "type": "string",
          "x-nullable": false
        },
        "display_name": {
          "type": "string",
          "x-nullable": false
        },
        "first_name": {
          "type": "string",
          "x-nullable": false
        },
        "last_name": {
          "type": "string",
          "x-nullable": false
        },
        "steam_id": {
          "type": "string",
          "x-nullable": false
        },
        "team_id": {
          "type": "integer",
          "format": "int32",
          "x-nullable": false
        }
      },
      "x-go-name": "PlayerListItem",
      "x-nullable": false
    },
    "PlayerMatch": {
      "type": "object",
      "required": [
        "id",
        "map",
        "match_state",
        "match_stats",
        "score",
        "uploaded_at"
      ],
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "x-nullable": false
        },
        "map": {
          "$ref": "#/definitions/Map"
        },
        "match_state": {
          "description": "Состояние матча:\n * -1 - Проигрыш\n * 0 - Ничья\n * 1 - Победа\n",
          "type": "integer",
          "format": "int8",
          "x-nullable": false
        },
        "match_stats": {
          "$ref": "#/definitions/PlayerMatch_match_stats"
        },
        "score": {
          "type": "string",
          "x-nullable": false
        },
        "uploaded_at": {
          "type": "string",
          "format": "date-time",
          "x-nullable": false
        }
      },
      "x-nullable": false
    },
    "PlayerMatchList": {
      "type": "object",
      "required": [
        "matches",
        "next_page_token"
      ],
      "properties": {
        "matches": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlayerMatch"
          }
        },
        "next_page_token": {
          "type": "string",
          "x-nullable": false
        }
      }
    },
    "PlayerMatch_match_stats": {
      "type": "object",
      "required": [
        "adr",
        "assists",
        "deaths",
        "headshot_percentage",
        "kills"
      ],
      "properties": {
        "adr": {
          "type": "number",
          "format": "double",
          "x-go-name": "ADR",
          "x-nullable": false
        },
        "assists": {
          "type": "integer",
          "format": "int32",
          "x-nullable": false
        },
        "deaths": {
          "type": "integer",
          "format": "int32",
          "x-nullable": false
        },
        "headshot_percentage": {
          "type": "number",
          "format": "double",
          "x-nullable": false
        },
        "kills": {
          "type": "integer",
          "format": "int32",
          "x-nullable": false
        }
      }
    },
    "PlayerStats": {
      "type": "object",
      "required": [
        "base_stats",
        "calculated_stats"
      ],
      "properties": {
        "base_stats": {
          "$ref": "#/definitions/PlayerStats_base_stats"
        },
        "calculated_stats": {
          "$ref": "#/definitions/PlayerStats_calculated_stats"
        }
      }
    },
    "PlayerStats_base_stats": {
      "description": "статистика игрока по всем сыгранным матчам",
      "type": "object",
      "properties": {
        "assists": {
          "type": "integer",
          "format": "int32"
        },
        "blind_kills": {
          "type": "integer",
          "format": "int32"
        },
        "blinded_players": {
          "type": "integer",
          "format": "int32"
        },
        "blinded_times": {
          "type": "integer",
          "format": "int32"
        },
        "bombs_defused": {
          "type": "integer",
          "format": "int32"
        },
        "bombs_planted": {
          "type": "integer",
          "format": "int32"
        },
        "damage_dealt": {
          "type": "integer",
          "format": "int32"
        },
        "damage_taken": {
          "type": "integer",
          "format": "int32"
        },
        "deaths": {
          "type": "integer",
          "format": "int32"
        },
        "draws": {
          "type": "integer",
          "format": "int32"
        },
        "flashbang_assists": {
          "type": "integer",
          "format": "int32"
        },
        "grenade_damage_dealt": {
          "type": "integer",
          "format": "int32"
        },
        "headshot_kills": {
          "type": "integer",
          "format": "int32"
        },
        "kills": {
          "type": "integer",
          "format": "int32"
        },
        "loses": {
          "type": "integer",
          "format": "int32"
        },
        "matches_played": {
          "type": "integer",
          "format": "int32"
        },
        "mvps": {
          "type": "integer",
          "format": "int32"
        },
        "noscope_kills": {
          "type": "integer",
          "format": "int32"
        },
        "rounds_played": {
          "type": "integer",
          "format": "int32"
        },
        "through_smoke_kills": {
          "type": "integer",
          "format": "int32"
        },
        "time_played": {
          "type": "integer",
          "format": "int64"
        },
        "wallbang_kills": {
          "type": "integer",
          "format": "int32"
        },
        "wins": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PlayerStats_calculated_stats": {
      "description": "высчитанная статистика на основе статистики по матчам",
      "type": "object",
      "properties": {
        "adr": {
          "description": "средний урон за раунд",
          "type": "number",
          "format": "double",
          "x-go-name": "ADR"
        },
        "assists_per_round": {
          "description": "среднее кол-во ассистов за раунд",
          "type": "number",
          "format": "double"
        },
        "blinded_players_per_round": {
          "description": "средне кол-во ослепленных игроков за раунд",
          "type": "number",
          "format": "double"
        },
        "deaths_per_round": {
          "description": "среднее кол-во смертей за раунд",
          "type": "number",
          "format": "double"
        },
        "grenade_damage_per_round": {
          "description": "средний урон гранатами за раунд",
          "type": "number",
          "format": "double"
        },
        "headshot_percentage": {
          "type": "number",
          "format": "double"
        },
        "kd": {
          "type": "number",
          "format": "double",
          "x-go-name": "KD"
        },
        "kills_per_round": {
          "description": "среднее кол-во убийств за раунд",
          "type": "number",
          "format": "double"
        },
        "win_rate": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "PlayerWeaponStats": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/PlayerWeaponStats_inner"
      }
    },
    "PlayerWeaponStats_inner": {
      "type": "object",
      "required": [
        "accuracy_stats",
        "base_stats"
      ],
      "properties": {
        "accuracy_stats": {
          "$ref": "#/definitions/PlayerWeaponStats_inner_accuracy_stats"
        },
        "base_stats": {
          "$ref": "#/definitions/PlayerWeaponStats_inner_base_stats"
        },
        "weapon": {
          "type": "string"
        },
        "weapon_id": {
          "type": "integer",
          "format": "int16"
        }
      },
      "x-nullable": false
    },
    "PlayerWeaponStats_inner_accuracy_stats": {
      "type": "object",
      "properties": {
        "arms": {
          "type": "number",
          "format": "double"
        },
        "chest": {
          "type": "number",
          "format": "double"
        },
        "head": {
          "type": "number",
          "format": "double"
        },
        "legs": {
          "type": "number",
          "format": "double"
        },
        "neck": {
          "type": "number",
          "format": "double"
        },
        "stomach": {
          "type": "number",
          "format": "double"
        },
        "total": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "PlayerWeaponStats_inner_base_stats": {
      "type": "object",
      "properties": {
        "arm_hits": {
          "type": "integer",
          "format": "int32"
        },
        "assists": {
          "type": "integer",
          "format": "int32"
        },
        "blind_kills": {
          "type": "integer",
          "format": "int32"
        },
        "chest_hits": {
          "type": "integer",
          "format": "int32"
        },
        "damage_dealt": {
          "type": "integer",
          "format": "int32"
        },
        "damage_taken": {
          "type": "integer",
          "format": "int32"
        },
        "deaths": {
          "type": "integer",
          "format": "int32"
        },
        "head_hits": {
          "type": "integer",
          "format": "int32"
        },
        "headshot_kills": {
          "type": "integer",
          "format": "int32"
        },
        "kills": {
          "type": "integer",
          "format": "int32"
        },
        "leg_hits": {
          "type": "integer",
          "format": "int32"
        },
        "neck_hits": {
          "type": "integer",
          "format": "int32"
        },
        "noscope_kills": {
          "type": "integer",
          "format": "int32"
        },
        "shots": {
          "type": "integer",
          "format": "int32"
        },
        "stomach_hits": {
          "type": "integer",
          "format": "int32"
        },
        "through_smoke_kills": {
          "type": "integer",
          "format": "int32"
        },
        "total_hits": {
          "type": "integer",
          "format": "int32"
        },
        "wallbang_kills": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Team": {
      "type": "object",
      "required": [
        "clan_name",
        "id"
      ],
      "properties": {
        "clan_name": {
          "type": "string",
          "x-nullable": false
        },
        "flag_code": {
          "type": "string",
          "x-nullable": false
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "x-nullable": false
        },
        "institution_id": {
          "type": "integer",
          "format": "int32",
          "x-nullable": false
        }
      }
    },
    "TeamList": {
      "type": "object",
      "required": [
        "has_next",
        "teams"
      ],
      "properties": {
        "has_next": {
          "type": "boolean",
          "x-nullable": false
        },
        "teams": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TeamList_teams"
          }
        }
      }
    },
    "TeamList_institution": {
      "type": "object",
      "properties": {
        "city": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "logo_url": {
          "type": "string"
        },
        "short_name": {
          "type": "string"
        },
        "type": {
          "type": "integer",
          "format": "int8"
        }
      },
      "x-go-name": "TeamListInstitution"
    },
    "TeamList_teams": {
      "type": "object",
      "required": [
        "clan_name",
        "id"
      ],
      "properties": {
        "clan_name": {
          "type": "string",
          "x-nullable": false
        },
        "flag_code": {
          "type": "string",
          "x-nullable": false
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "x-nullable": false
        },
        "institution": {
          "$ref": "#/definitions/TeamList_institution"
        }
      },
      "x-go-name": "TeamListItem",
      "x-nullable": false
    },
    "TeamPlayerList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/TeamPlayerList_inner"
      }
    },
    "TeamPlayerList_inner": {
      "type": "object",
      "required": [
        "is_captain",
        "steam_id"
      ],
      "properties": {
        "avatar_url": {
          "type": "string",
          "x-nullable": false
        },
        "display_name": {
          "type": "string",
          "x-nullable": false
        },
        "first_name": {
          "type": "string",
          "x-nullable": false
        },
        "is_captain": {
          "type": "boolean",
          "x-nullable": false
        },
        "last_name": {
          "type": "string",
          "x-nullable": false
        },
        "steam_id": {
          "type": "string",
          "x-nullable": false
        }
      },
      "x-go-name": "TeamPlayerListItem",
      "x-nullable": false
    },
    "UpdatePlayerRequest": {
      "type": "object",
      "required": [
        "avatar_url",
        "first_name",
        "last_name"
      ],
      "properties": {
        "avatar_url": {
          "type": "string",
          "format": "uri",
          "x-nullable": false
        },
        "first_name": {
          "type": "string",
          "maxLength": 32,
          "minLength": 2,
          "x-nullable": false
        },
        "last_name": {
          "type": "string",
          "maxLength": 32,
          "minLength": 2,
          "x-nullable": false
        }
      }
    },
    "UpdateTeamRequest": {
      "type": "object",
      "required": [
        "clan_name",
        "flag_code",
        "institution_id"
      ],
      "properties": {
        "clan_name": {
          "type": "string",
          "maxLength": 16,
          "minLength": 2,
          "x-nullable": false
        },
        "flag_code": {
          "type": "string",
          "maxLength": 2,
          "minLength": 2,
          "x-nullable": false
        },
        "institution_id": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "x-nullable": false
        }
      }
    },
    "WeaponClassList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/WeaponClassList_inner"
      }
    },
    "WeaponClassList_inner": {
      "type": "object",
      "required": [
        "class",
        "id"
      ],
      "properties": {
        "class": {
          "type": "string",
          "x-nullable": false
        },
        "id": {
          "type": "integer",
          "format": "int16",
          "x-nullable": false
        }
      },
      "x-nullable": false
    },
    "WeaponList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/WeaponList_inner"
      }
    },
    "WeaponList_inner": {
      "type": "object",
      "required": [
        "class",
        "class_id",
        "weapon",
        "weapon_id"
      ],
      "properties": {
        "class": {
          "description": "имя класса оружия",
          "type": "string",
          "x-nullable": false
        },
        "class_id": {
          "type": "integer",
          "format": "int16",
          "x-nullable": false
        },
        "weapon": {
          "description": "название оружия",
          "type": "string",
          "x-nullable": false
        },
        "weapon_id": {
          "type": "integer",
          "format": "int16",
          "x-nullable": false
        }
      },
      "x-nullable": false
    }
  },
  "tags": [
    {
      "description": "Аккаунт",
      "name": "account"
    },
    {
      "description": "Игрок",
      "name": "player"
    },
    {
      "description": "Команда",
      "name": "team"
    },
    {
      "description": "Матч",
      "name": "match"
    },
    {
      "description": "Учебное заведение",
      "name": "institution"
    },
    {
      "description": "Справочник",
      "name": "compendium"
    }
  ]
}`))
}
