// Code generated by go-swagger; DO NOT EDIT.

package match

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// DeleteMatchHandlerFunc turns a function with the right signature into a delete match handler
type DeleteMatchHandlerFunc func(DeleteMatchParams) DeleteMatchResponder

// Handle executing the request and returning a response
func (fn DeleteMatchHandlerFunc) Handle(params DeleteMatchParams) DeleteMatchResponder {
	return fn(params)
}

// DeleteMatchHandler interface for that can handle valid delete match params
type DeleteMatchHandler interface {
	Handle(DeleteMatchParams) DeleteMatchResponder
}

// NewDeleteMatch creates a new http.Handler for the delete match operation
func NewDeleteMatch(ctx *middleware.Context, handler DeleteMatchHandler) *DeleteMatch {
	return &DeleteMatch{Context: ctx, Handler: handler}
}

/*
	DeleteMatch swagger:route DELETE /matches/{match_id} match deleteMatch

Удаление матча
*/
type DeleteMatch struct {
	Context *middleware.Context
	Handler DeleteMatchHandler
}

func (o *DeleteMatch) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewDeleteMatchParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
