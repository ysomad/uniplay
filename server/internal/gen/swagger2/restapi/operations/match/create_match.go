// Code generated by go-swagger; DO NOT EDIT.

package match

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// CreateMatchHandlerFunc turns a function with the right signature into a create match handler
type CreateMatchHandlerFunc func(CreateMatchParams) CreateMatchResponder

// Handle executing the request and returning a response
func (fn CreateMatchHandlerFunc) Handle(params CreateMatchParams) CreateMatchResponder {
	return fn(params)
}

// CreateMatchHandler interface for that can handle valid create match params
type CreateMatchHandler interface {
	Handle(CreateMatchParams) CreateMatchResponder
}

// NewCreateMatch creates a new http.Handler for the create match operation
func NewCreateMatch(ctx *middleware.Context, handler CreateMatchHandler) *CreateMatch {
	return &CreateMatch{Context: ctx, Handler: handler}
}

/*
	CreateMatch swagger:route POST /matches match createMatch

Создание матча из записи
*/
type CreateMatch struct {
	Context *middleware.Context
	Handler CreateMatchHandler
}

func (o *CreateMatch) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewCreateMatchParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
