// Code generated by go-swagger; DO NOT EDIT.

package compendium

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetMapsHandlerFunc turns a function with the right signature into a get maps handler
type GetMapsHandlerFunc func(GetMapsParams) GetMapsResponder

// Handle executing the request and returning a response
func (fn GetMapsHandlerFunc) Handle(params GetMapsParams) GetMapsResponder {
	return fn(params)
}

// GetMapsHandler interface for that can handle valid get maps params
type GetMapsHandler interface {
	Handle(GetMapsParams) GetMapsResponder
}

// NewGetMaps creates a new http.Handler for the get maps operation
func NewGetMaps(ctx *middleware.Context, handler GetMapsHandler) *GetMaps {
	return &GetMaps{Context: ctx, Handler: handler}
}

/*
	GetMaps swagger:route GET /compendiums/maps compendium getMaps

Получение списка карт
*/
type GetMaps struct {
	Context *middleware.Context
	Handler GetMapsHandler
}

func (o *GetMaps) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetMapsParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
