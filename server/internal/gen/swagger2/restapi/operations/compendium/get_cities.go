// Code generated by go-swagger; DO NOT EDIT.

package compendium

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetCitiesHandlerFunc turns a function with the right signature into a get cities handler
type GetCitiesHandlerFunc func(GetCitiesParams) GetCitiesResponder

// Handle executing the request and returning a response
func (fn GetCitiesHandlerFunc) Handle(params GetCitiesParams) GetCitiesResponder {
	return fn(params)
}

// GetCitiesHandler interface for that can handle valid get cities params
type GetCitiesHandler interface {
	Handle(GetCitiesParams) GetCitiesResponder
}

// NewGetCities creates a new http.Handler for the get cities operation
func NewGetCities(ctx *middleware.Context, handler GetCitiesHandler) *GetCities {
	return &GetCities{Context: ctx, Handler: handler}
}

/*
	GetCities swagger:route GET /compendiums/cities compendium getCities

Получение списка городов
*/
type GetCities struct {
	Context *middleware.Context
	Handler GetCitiesHandler
}

func (o *GetCities) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetCitiesParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
