// Code generated by go-swagger; DO NOT EDIT.

package compendium

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"github.com/ysomad/uniplay/internal/gen/swagger2/models"
)

// GetWeaponsOKCode is the HTTP code returned for type GetWeaponsOK
const GetWeaponsOKCode int = 200

/*
GetWeaponsOK OK

swagger:response getWeaponsOK
*/
type GetWeaponsOK struct {

	/*
	  In: Body
	*/
	Payload models.WeaponList `json:"body,omitempty"`
}

// NewGetWeaponsOK creates GetWeaponsOK with default headers values
func NewGetWeaponsOK() *GetWeaponsOK {

	return &GetWeaponsOK{}
}

// WithPayload adds the payload to the get weapons o k response
func (o *GetWeaponsOK) WithPayload(payload models.WeaponList) *GetWeaponsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get weapons o k response
func (o *GetWeaponsOK) SetPayload(payload models.WeaponList) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWeaponsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = models.WeaponList{}
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

func (o *GetWeaponsOK) GetWeaponsResponder() {}

// GetWeaponsInternalServerErrorCode is the HTTP code returned for type GetWeaponsInternalServerError
const GetWeaponsInternalServerErrorCode int = 500

/*
GetWeaponsInternalServerError Internal Server Error

swagger:response getWeaponsInternalServerError
*/
type GetWeaponsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetWeaponsInternalServerError creates GetWeaponsInternalServerError with default headers values
func NewGetWeaponsInternalServerError() *GetWeaponsInternalServerError {

	return &GetWeaponsInternalServerError{}
}

// WithPayload adds the payload to the get weapons internal server error response
func (o *GetWeaponsInternalServerError) WithPayload(payload *models.Error) *GetWeaponsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get weapons internal server error response
func (o *GetWeaponsInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWeaponsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetWeaponsInternalServerError) GetWeaponsResponder() {}

type GetWeaponsNotImplementedResponder struct {
	middleware.Responder
}

func (*GetWeaponsNotImplementedResponder) GetWeaponsResponder() {}

func GetWeaponsNotImplemented() GetWeaponsResponder {
	return &GetWeaponsNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.GetWeapons has not yet been implemented",
		),
	}
}

type GetWeaponsResponder interface {
	middleware.Responder
	GetWeaponsResponder()
}
