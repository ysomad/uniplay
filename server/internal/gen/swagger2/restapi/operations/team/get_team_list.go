// Code generated by go-swagger; DO NOT EDIT.

package team

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetTeamListHandlerFunc turns a function with the right signature into a get team list handler
type GetTeamListHandlerFunc func(GetTeamListParams) GetTeamListResponder

// Handle executing the request and returning a response
func (fn GetTeamListHandlerFunc) Handle(params GetTeamListParams) GetTeamListResponder {
	return fn(params)
}

// GetTeamListHandler interface for that can handle valid get team list params
type GetTeamListHandler interface {
	Handle(GetTeamListParams) GetTeamListResponder
}

// NewGetTeamList creates a new http.Handler for the get team list operation
func NewGetTeamList(ctx *middleware.Context, handler GetTeamListHandler) *GetTeamList {
	return &GetTeamList{Context: ctx, Handler: handler}
}

/*
	GetTeamList swagger:route GET /teams team getTeamList

Получение списка команд
*/
type GetTeamList struct {
	Context *middleware.Context
	Handler GetTeamListHandler
}

func (o *GetTeamList) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetTeamListParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
