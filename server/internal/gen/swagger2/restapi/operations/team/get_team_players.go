// Code generated by go-swagger; DO NOT EDIT.

package team

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetTeamPlayersHandlerFunc turns a function with the right signature into a get team players handler
type GetTeamPlayersHandlerFunc func(GetTeamPlayersParams) GetTeamPlayersResponder

// Handle executing the request and returning a response
func (fn GetTeamPlayersHandlerFunc) Handle(params GetTeamPlayersParams) GetTeamPlayersResponder {
	return fn(params)
}

// GetTeamPlayersHandler interface for that can handle valid get team players params
type GetTeamPlayersHandler interface {
	Handle(GetTeamPlayersParams) GetTeamPlayersResponder
}

// NewGetTeamPlayers creates a new http.Handler for the get team players operation
func NewGetTeamPlayers(ctx *middleware.Context, handler GetTeamPlayersHandler) *GetTeamPlayers {
	return &GetTeamPlayers{Context: ctx, Handler: handler}
}

/*
	GetTeamPlayers swagger:route GET /teams/{team_id}/players team getTeamPlayers

Получение списка игроков команды
*/
type GetTeamPlayers struct {
	Context *middleware.Context
	Handler GetTeamPlayersHandler
}

func (o *GetTeamPlayers) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetTeamPlayersParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
