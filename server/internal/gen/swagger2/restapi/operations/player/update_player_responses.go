// Code generated by go-swagger; DO NOT EDIT.

package player

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"github.com/ysomad/uniplay/internal/gen/swagger2/models"
)

// UpdatePlayerOKCode is the HTTP code returned for type UpdatePlayerOK
const UpdatePlayerOKCode int = 200

/*
UpdatePlayerOK OK

swagger:response updatePlayerOK
*/
type UpdatePlayerOK struct {

	/*
	  In: Body
	*/
	Payload *models.Player `json:"body,omitempty"`
}

// NewUpdatePlayerOK creates UpdatePlayerOK with default headers values
func NewUpdatePlayerOK() *UpdatePlayerOK {

	return &UpdatePlayerOK{}
}

// WithPayload adds the payload to the update player o k response
func (o *UpdatePlayerOK) WithPayload(payload *models.Player) *UpdatePlayerOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update player o k response
func (o *UpdatePlayerOK) SetPayload(payload *models.Player) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdatePlayerOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *UpdatePlayerOK) UpdatePlayerResponder() {}

// UpdatePlayerNotFoundCode is the HTTP code returned for type UpdatePlayerNotFound
const UpdatePlayerNotFoundCode int = 404

/*
UpdatePlayerNotFound Not Found

swagger:response updatePlayerNotFound
*/
type UpdatePlayerNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdatePlayerNotFound creates UpdatePlayerNotFound with default headers values
func NewUpdatePlayerNotFound() *UpdatePlayerNotFound {

	return &UpdatePlayerNotFound{}
}

// WithPayload adds the payload to the update player not found response
func (o *UpdatePlayerNotFound) WithPayload(payload *models.Error) *UpdatePlayerNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update player not found response
func (o *UpdatePlayerNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdatePlayerNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *UpdatePlayerNotFound) UpdatePlayerResponder() {}

// UpdatePlayerUnprocessableEntityCode is the HTTP code returned for type UpdatePlayerUnprocessableEntity
const UpdatePlayerUnprocessableEntityCode int = 422

/*
UpdatePlayerUnprocessableEntity Unprocessable Entity

swagger:response updatePlayerUnprocessableEntity
*/
type UpdatePlayerUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdatePlayerUnprocessableEntity creates UpdatePlayerUnprocessableEntity with default headers values
func NewUpdatePlayerUnprocessableEntity() *UpdatePlayerUnprocessableEntity {

	return &UpdatePlayerUnprocessableEntity{}
}

// WithPayload adds the payload to the update player unprocessable entity response
func (o *UpdatePlayerUnprocessableEntity) WithPayload(payload *models.Error) *UpdatePlayerUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update player unprocessable entity response
func (o *UpdatePlayerUnprocessableEntity) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdatePlayerUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *UpdatePlayerUnprocessableEntity) UpdatePlayerResponder() {}

// UpdatePlayerInternalServerErrorCode is the HTTP code returned for type UpdatePlayerInternalServerError
const UpdatePlayerInternalServerErrorCode int = 500

/*
UpdatePlayerInternalServerError Internal Server Error

swagger:response updatePlayerInternalServerError
*/
type UpdatePlayerInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdatePlayerInternalServerError creates UpdatePlayerInternalServerError with default headers values
func NewUpdatePlayerInternalServerError() *UpdatePlayerInternalServerError {

	return &UpdatePlayerInternalServerError{}
}

// WithPayload adds the payload to the update player internal server error response
func (o *UpdatePlayerInternalServerError) WithPayload(payload *models.Error) *UpdatePlayerInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update player internal server error response
func (o *UpdatePlayerInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdatePlayerInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *UpdatePlayerInternalServerError) UpdatePlayerResponder() {}

type UpdatePlayerNotImplementedResponder struct {
	middleware.Responder
}

func (*UpdatePlayerNotImplementedResponder) UpdatePlayerResponder() {}

func UpdatePlayerNotImplemented() UpdatePlayerResponder {
	return &UpdatePlayerNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.UpdatePlayer has not yet been implemented",
		),
	}
}

type UpdatePlayerResponder interface {
	middleware.Responder
	UpdatePlayerResponder()
}
