// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PlayerListItem player list item
//
// swagger:model PlayerListItem
type PlayerListItem struct {

	// avatar url
	AvatarURL string `json:"avatar_url,omitempty"`

	// display name
	DisplayName string `json:"display_name,omitempty"`

	// first name
	FirstName string `json:"first_name,omitempty"`

	// last name
	LastName string `json:"last_name,omitempty"`

	// steam id
	// Required: true
	SteamID string `json:"steam_id"`

	// team id
	TeamID int32 `json:"team_id,omitempty"`
}

// Validate validates this player list item
func (m *PlayerListItem) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSteamID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PlayerListItem) validateSteamID(formats strfmt.Registry) error {

	if err := validate.RequiredString("steam_id", "body", m.SteamID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this player list item based on context it is used
func (m *PlayerListItem) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PlayerListItem) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PlayerListItem) UnmarshalBinary(b []byte) error {
	var res PlayerListItem
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
