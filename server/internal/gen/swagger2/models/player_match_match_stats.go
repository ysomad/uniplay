// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PlayerMatchMatchStats player match match stats
//
// swagger:model PlayerMatch_match_stats
type PlayerMatchMatchStats struct {

	// a d r
	// Required: true
	ADR float64 `json:"adr"`

	// assists
	// Required: true
	Assists int32 `json:"assists"`

	// deaths
	// Required: true
	Deaths int32 `json:"deaths"`

	// headshot percentage
	// Required: true
	HeadshotPercentage float64 `json:"headshot_percentage"`

	// kills
	// Required: true
	Kills int32 `json:"kills"`
}

// Validate validates this player match match stats
func (m *PlayerMatchMatchStats) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateADR(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAssists(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDeaths(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateHeadshotPercentage(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateKills(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PlayerMatchMatchStats) validateADR(formats strfmt.Registry) error {

	if err := validate.Required("adr", "body", float64(m.ADR)); err != nil {
		return err
	}

	return nil
}

func (m *PlayerMatchMatchStats) validateAssists(formats strfmt.Registry) error {

	if err := validate.Required("assists", "body", int32(m.Assists)); err != nil {
		return err
	}

	return nil
}

func (m *PlayerMatchMatchStats) validateDeaths(formats strfmt.Registry) error {

	if err := validate.Required("deaths", "body", int32(m.Deaths)); err != nil {
		return err
	}

	return nil
}

func (m *PlayerMatchMatchStats) validateHeadshotPercentage(formats strfmt.Registry) error {

	if err := validate.Required("headshot_percentage", "body", float64(m.HeadshotPercentage)); err != nil {
		return err
	}

	return nil
}

func (m *PlayerMatchMatchStats) validateKills(formats strfmt.Registry) error {

	if err := validate.Required("kills", "body", int32(m.Kills)); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this player match match stats based on context it is used
func (m *PlayerMatchMatchStats) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PlayerMatchMatchStats) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PlayerMatchMatchStats) UnmarshalBinary(b []byte) error {
	var res PlayerMatchMatchStats
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
